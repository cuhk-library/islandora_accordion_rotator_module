<?php
/**
 * @file
 * A block module that displays images from a list of PID's
 * in an interactive accordion rotator. Based off Accordion Rotator v1.0.
 */

/**
 * Implements hook_help().
 *
 * Displays help and module information.
 */
function accordion_rotator_help($path, $arg) {
  switch ($path) {
    case "admin/help#accordion_rotator":
      return '<p>' . t("Displays images based of a user selected list of PID's for display on the frontpage accordion rotator") . '</p>';

    break;
  }
}

/**
 * Implements hook_menu().
 */
function accordion_rotator_menu() {
  $items = array();
  $items['accordion_rotator/setup/%'] = array(
    'page callback' => 'accordion_rotator_canvas_setup',
    'page arguments' => array(2),
    'type' => MENU_CALLBACK,
    'access arguments' => array(2),
    'file' => 'includes/utils.inc',
  );
  $items['admin/config/content/accordion_rotator'] = array(
    'title' => 'Accordion Rotator Configuration',
    'description' => 'Configuration for The Accordion Rotator module',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('accordion_rotator_form'),
    'access arguments' => array('access administration pages'),
    'file' => 'includes/utils.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Implements hook_block_info().
 */
function accordion_rotator_block_info() {
  $blocks['accordion_rotator'] = array(
    'info' => t('Accordion rotator'),
    'cache' => DRUPAL_CACHE_PER_ROLE,
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function accordion_rotator_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'accordion_rotator':
      $block['subject'] = t('Block Name');
      $block['content'] = array(
        '#markup' => theme('accordion_rotator_view'),
        '#attached' => array(
          'css' => array(
            drupal_get_path('module', 'accordion_rotator') . '/css/main.css',
            drupal_get_path('module', 'accordion_rotator') . '/css/fonts.css',
            drupal_get_path('module', 'accordion_rotator') . '/css/accordion.css',
          ),
          'js' => array(
            drupal_get_path('module', 'accordion_rotator') . '//jquery/jquery-1.6.2.min.js',
            drupal_get_path('module', 'accordion_rotator') . '/js/resize.js',
            drupal_get_path('module', 'accordion_rotator') . '/js/script.js',
            drupal_get_path('module', 'accordion_rotator') . '/js/accordion.js',
            drupal_get_path('module', 'accordion_rotator') . '/js/pngFixer.js',
            drupal_get_path('module', 'accordion_rotator') . '/js/buttons.js',
          ),
        ),
      );
      // This settings variable is used in the js/accordion.js file to get the
      // path for the left/right buttons.//
      $my_settings = array(
        'linkpath' => url(drupal_get_path('module', 'accordion_rotator')),
      );
      drupal_add_js(array('accordion_rotator' => $my_settings), 'setting');
      break;
  }
  return $block;
}

/**
 * Implements hook_theme().
 */
function accordion_rotator_theme($existing, $type, $theme, $path) {
  return array(
    'accordion_rotator_view' => array(
      'template' => 'theme/accordion-rotator',
      'variables' => array(
        'domain_url' => url(drupal_get_path('module', 'accordion_rotator')),
        'block_data' => accordion_rotator_contents(),
      ),
    ),
  );
}

/**
 * Accordion rotator function.
 * @return array
 *   An array of array's with each inner
 *   array containing data for a single image/description block
 */
function accordion_rotator_contents() {
  module_load_include('inc', 'islandora', 'includes/IslandoraTuque');
  module_load_include('inc', 'islandora', 'includes/datastream');

  global $base_url;
  // Get the configuration pids from this modules configuration page.
  $content = array();
  $pids_array = explode(",", variable_get('accordion_pid_list'));
  // Safety Check.
  if (!empty($pids_array)) {
    // Connect to our repository.
    $my_islandora_tuque = new IslandoraTuque();
    $repository = $my_islandora_tuque->repository;
    foreach ($pids_array as $pid) {
      // Load the associated fedora object by pid.
      $fedora_object = islandora_object_load($pid);
      // Check the objects existance, incase any faulty pids got past.
      // the configuration page validation.
      if ($fedora_object) {
        // Grab the DC Datastream's contents, gets description.
        $dc = $fedora_object['DC']->content;
        $dc_object = DublinCore::importFromXMLString($dc);
        $thumbnail_url = '';
        // Try to set the best quality image as the url.
        if (isset($fedora_object['TN'])) {
          $thumbnail_url = url($base_url . "/islandora/object/{$fedora_object->id}/datastream/TN/view");
        }
        // If MEDIUM_SIZE is available, use it instead.
        if (isset($fedora_object['MEDIUM_SIZE'])) {
          $thumbnail_url = url($base_url . "/islandora/object/{$fedora_object->id}/datastream/MEDIUM_SIZE/view");
        }
        // If JPEG is available, use it instead.
        if (isset($fedora_object['JPEG'])) {
          $thumbnail_url = url($base_url . "/islandora/object/{$fedora_object->id}/datastream/JPEG/view");
        }
        // Add this data as an entry to be displayed to the user as
        // an accordion block.
        $title = "";
        $description = "";
        if (isset($dc_object->dc['dc:title'][0])) {
          $title = $dc_object->dc['dc:title'][0];
        } else {
          $title = "";
        }
        if (isset($dc_object->dc['dc:description'][0])) {
          $description = $dc_object->dc['dc:description'][0];
          //print($description);
        } else {
          $description = '';
        }
        //print($description);
        array_push($content, array(
          'title' => $title,
          'description' => $description,
          'img_url' => $thumbnail_url,
          )
        );
      }
    }
  }
  // Fill sample data if there is nothing configured yet.
  if (empty($content)) {
    array_push($content, array(
      'title' => 'Test Title',
      'description' => 'This is a description. Replace with data stream description by
                        adding a comma seperated list of valid PIDs in this modules configuration page. ',
      'img_url' => url($base_url . "/" . drupal_get_path('module', 'accordion_rotator') .
                   '/images/example_4/Depositphotos_4297654_XL.jpg'),
      )
    );
  }
  return $content;
}
